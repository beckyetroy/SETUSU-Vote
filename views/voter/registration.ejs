<!doctype html>
<html lang="en">
    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <!-- Fonts -->
        <link href='https://fonts.googleapis.com/css?family=Inter' rel='stylesheet'>
        <link href='https://fonts.googleapis.com/css?family=Roboto Condensed' rel='stylesheet'>
        <link href="https://fonts.cdnfonts.com/css/aileron" rel="stylesheet">

        <!-- CSS-->
        <link rel="stylesheet" href="/css/style.css">
        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.1/css/all.css" integrity="sha384-vp86vTRFVJgpjF9jiIGPEEqYqlDwgyBgEF109VFjmqGmIY/Y4HV4d3Gp2irVfcrp" crossorigin="anonymous">

        <!-- Bootstrap CSS -->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

        <!-- JQuery -->
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
        <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js" integrity="sha384-Dziy8F2VlJQLMShA6FHWNul/veM9bCkRUaLqr199K94ntO5QUrLJBEbYegdSkkqX" crossorigin="anonymous"></script>

        <!-- Bootstrap JavaScript -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

        <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
        <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

        <!-- Dropzone -->
        <script src="https://unpkg.com/dropzone@5/dist/min/dropzone.min.js"></script>
        <link rel="stylesheet" href="https://unpkg.com/dropzone@5/dist/min/dropzone.min.css" type="text/css" />

        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">

        <link rel="icon" type="image/png" href="/assets/Logo.png">
        <title><%= title %></title>
    </head>
    <body>
        <nav class="navbar navbar-expand-lg d-flex justify-content-between">
            <h1 id="webpage-title"><%= title %></h1>
            <div class="navbar-nav ms-auto">
                <div class="nav-item">
                    <a class="nav-link" href="/">Back to Home Page</a>
                </div>
            </div>
        </nav>
        <div class="vote-success" id="vote-success">
          <h3>Registered Successfully!</h3>
          <p id="successMessage"></p>
          <p id="successMessageTimer"></p>
          <button class="primaryBtn" onclick="location.href='/'">BACK TO HOME</button>
        </div>
        <div class="container-basic-registration">
            <form action="/register" method="POST" class="register">
                <h3 class="formTitle">Register to Vote</h3>
                <div class="basic-form-error" id="basic-form-error"></div>
                <%
                if(data.length > 0)
                {
                    %>
                    <div class="select-election">
                      <select name="election" id="electionSelect" class="form-select form-select-lg mb-3">
                          <option value="" disabled selected>Select Election</option>
                          <%
                          electionData = data.filter((v, i, a) => a.findIndex(t => (t.Id === v.Id)) === i);
                          const now = new Date();
                          const upcomingElections = electionData.filter((election) => new Date(election.ElectionDate) >= now);
                          const sortedElections = upcomingElections.sort((a, b) => new Date(a.ElectionDate) - new Date(b.ElectionDate));
                          sortedElections.forEach(function(election){
                              if (election.Id) {
                          %>
                              <option value="<%= election.Id %>"> <%= election.Description %> </option>
                          <%
                          } 
                              else {}
                          });
                          %>
                      </select>
                    </div>

                  <div class="form-floating">
                      <input type="text" placeholder="Enter Student Number" name="studentno" id="studentno" class="form-control" required>
                      <label for="studentno">Student Number : </label>
                  </div>

                  <div class="form-floating">
                    <input type="text" placeholder="Enter Email" name="email" class="form-control" id="email" required>
                    <label for="email">Student Email : </label>
                  </div>
                  <div class="form-floating">
                      <input type="text" placeholder="Enter First Name(s)" name="fname" class="form-control" id="fname" required>
                      <label for="fname">First Name(s) : </label>
                  </div>
                  <div class="form-floating">
                      <input type="text" placeholder="Enter Last Name" name="lname" class="form-control" id="lname" required>
                      <label for="lname">Last Name : </label>
                  </div>
                    <br>
                    <button type="submit" value="register" class="primaryBtn" id="next-button">NEXT</button>
                    <%
                }
                else
                {
                    %>
                    No Elections to Register for at this time.
                <%
                }
                %>
            </form>
        </div>

        <div class="container-instructions">
          <div class="d-flex flex-column align-items-center justify-content-center h-100">
            <h3> Upload An Image of your Student Card to Complete Registration</h3>
            <p> The image must clearly show your name, student number, and photo ID as below:</p>
            <img src="assets/Sample_Card.jpg" alt="Sample Student Card Image" id="cardSample">
            <br><p><small><strong>NOTE:</strong> You will only get to upload your card once, so make sure it is clear!</small></p>
            <br>
            <button class="primaryBtn" id="next-button-2">NEXT</button>
          </div>
        </div>

        <div class="container-image-registration" id="container-image-registration">
          <div id="errorMessageDiv" class="errorMessageDiv hidden">
            <i class="fa fa-exclamation-circle" aria-hidden="true"></i> The image you submitted is not valid. Please try again.
          </div>
          <div class="upload-option">
            <h3>Upload an Image of your Student ID Card</h3>
            <div class="image-upload">
              <div id="my-dropzone" class="dropzone"></div>
              <button class="primaryBtn" id="confirmBtn" disabled>Upload</button>
            </div>
          </div>

          <h2 id="or"><u>OR</u></h2>

          <div class="camera-option" id="camera-option">
            <h3>Take a Photo of your Student ID Card</h3>

            <button class="cameraBtn" id="open-camera-btn"><i class="fas fa-camera"></i><br>Open camera</button>
          </div>
      </div>

      <div class="container-camera-option" id="container-camera-option">
        <div id="camera-container" class="camera-container" style="background-color: rgba(0, 0, 0, 0.5); display: none;">
          <video id="video" autoplay></video>
          <button id="startbutton"><i class="fas fa-camera"></i></button>
          <button id="cancelbutton" class="close-btn">×</button>
        </div>

        <div id="confirm-dialog" class="hidden">
          <h3>Upload this photo?</h3>
          <p>Ensure your name, face, and student number are clearly visible on the card.</p>
          <img id="photo-preview" src="" alt="Taken photo">
          <div class="d-flex align-items-center justify-content-center">
              <button id="retake" class="primaryBtn">× No</button>
              <button id="confirm" class="primaryBtn">✓ Yes</button>
          </div>
        </div>
      </div>

<script>
  const nextButton = document.getElementById('next-button');
  const nextButton2 = document.getElementById('next-button-2');
  const basicRegistration = document.querySelector('.container-basic-registration');
  const instructions = document.querySelector('.container-instructions');
  const imageRegistration = document.getElementById('container-image-registration');
  const basicForm = document.querySelector('.register');
  const basicFormError = document.getElementById('basic-form-error');
  const successContainer = document.getElementById('vote-success');

  instructions.classList.add('hidden');
  imageRegistration.classList.add('hidden');
  successContainer.classList.add('hidden');

  basicForm.addEventListener('submit', function(event) {
    event.preventDefault();
  });

  nextButton.addEventListener('click', () => {
    const formData = new FormData(basicForm);
    const body = new URLSearchParams(formData).toString();

    fetch('/register', {
      method: 'POST',
      body: body,
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded'
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.message === 'Basic form saved') {
        basicRegistration.classList.add('slide-out');
        setTimeout(() => {
          basicRegistration.remove();
          basicFormError.textContent = '';
          instructions.classList.remove('hidden');
          instructions.classList.add('fade-in');
        }, 1000);
      }
      else if (data.message === 'You are already registered for this election.') {
        basicFormError.textContent = 'You are already registered for this election.';
      }
    })
    .catch(error => {
      console.error(error);
    });
  });

  nextButton2.addEventListener('click', () => {
    instructions.classList.add('slide-out');
      setTimeout(() => {
        instructions.remove();
        imageRegistration.classList.remove('hidden');
        imageRegistration.classList.add('fade-in');
      }, 1000);
  });

  const imageUpload = document.querySelector('.image-upload');
  const cameraOptionContainer = document.getElementById('container-camera-option');
  const openCameraBtn = document.getElementById('open-camera-btn');
  const cameraContainer = document.getElementById('camera-container');
  const video = document.getElementById('video');
  const startbutton = document.getElementById('startbutton');
  const cancelbutton = document.getElementById('cancelbutton');
  const confirmDialog = document.getElementById('confirm-dialog');
  const errorMessageDiv = document.getElementById('errorMessageDiv');
  const photoPreview = document.getElementById('photo-preview');
  const canvas = document.createElement('canvas');
  const successMessage = document.getElementById('successMessage');
  const successMessageTimer = document.getElementById('successMessageTimer');
  let stream = null;
  let data = null;

  confirmDialog.classList.add('hidden');
  errorMessageDiv.classList.add('hidden');

  openCameraBtn.addEventListener('click', function() {
    // Show camera container and hide other fields
    cameraContainer.style.display = 'block';
    cameraOptionContainer.classList.add('camera-show');
    imageRegistration.classList.remove('fade-in');
    imageRegistration.classList.add('hidden');

    // Get user media
    if (navigator.mediaDevices.getUserMedia) {
      navigator.mediaDevices.getUserMedia({ video: true })
        .then(function(mediaStream) {
            stream = mediaStream;
            video.srcObject = mediaStream;
            video.play();
        })
        .catch(function(err) {
          console.log("An error occurred: " + err);
        });
    }
  });

  // Take photo
  startbutton.addEventListener('click', function() {
    canvas.width = video.videoWidth;
    canvas.height = video.videoHeight;
    canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);
    data = canvas.toDataURL('image/png');
    video.pause();
    stream.getTracks()[0].stop();

    photoPreview.src = data;
    confirmDialog.classList.remove('hidden');
    cameraContainer.style.display = 'none';
  });

  const retakeButton = document.getElementById('retake');
  const confirmButton = document.getElementById('confirm');

  retakeButton.addEventListener('click', function () {
    confirmDialog.classList.add('hidden');
    if (!imageRegistration.classList.contains('hidden')) {
      imageRegistration.classList.add('hidden');
    }
    cameraContainer.style.display = 'block';

    // Get user media
    if (navigator.mediaDevices.getUserMedia) {
      navigator.mediaDevices.getUserMedia({ video: true })
        .then(function(mediaStream) {
            stream = mediaStream;
            video.srcObject = mediaStream;
            video.play();
        })
        .catch(function(err) {
          console.log("An error occurred: " + err);
        });
    }
    photoPreview.src = '';
  });

  confirmButton.addEventListener('click', function () {
    // convert data to Blob object
    const byteString = atob(data.split(',')[1]);
    const ab = new ArrayBuffer(byteString.length);
    const ia = new Uint8Array(ab);
    for (let i = 0; i < byteString.length; i++) {
      ia[i] = byteString.charCodeAt(i);
    }
    const blob = new Blob([ab], { type: 'image/png' });

    // create FormData object and append file
    const formData = new FormData();
    formData.append('image', blob, 'image.png');

    fetch('/register/upload-card', {
      method: 'POST',
      body: formData
    })
    .then(response => response.json())
    .then(data => {
      if (data.message.includes('election')) {
        const electionDescription = data.message.replace('Voter registered successfully for election ', '').trim();
        const electionOpenTime = data.OpenTime;
        const electionId = data.Id;
        if (electionDescription && electionOpenTime) {
          const openTime = new Date(electionOpenTime);
          const now = new Date();
          if (now >= openTime) {
            const voteButton = document.createElement('button');
            voteButton.setAttribute('class', 'primaryBtnInverted');
            voteButton.setAttribute('onclick', `location.href='/vote/${electionId}'`);
            voteButton.textContent = 'VOTE NOW';
            successMessageTimer.appendChild(voteButton);
          }
          else {
            var timeRemaining = Math.max(0, openTime.getTime() - now.getTime());

            var timer = setInterval(() => {
              var days = Math.floor(timeRemaining / (1000 * 60 * 60 * 24));
              var hours = Math.floor((timeRemaining % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
              var minutes = Math.floor((timeRemaining % (1000 * 60 * 60)) / (1000 * 60));
              var seconds = Math.floor((timeRemaining % (1000 * 60)) / 1000);
              var timerText = `Voting begins in ${days}d ${hours}h ${minutes}m ${seconds}s`;
              successMessageTimer.textContent = timerText;
              timeRemaining -= 1000;
              if (timeRemaining < 0) {
                clearInterval(timer);
              }
            }, 1000);
          }

          successMessage.innerHTML = `You are now registered for: <strong>${electionDescription}</strong>`;
          imageRegistration.classList.remove('fade-in');
          imageRegistration.classList.add('hidden');
          cameraOptionContainer.classList.add('hidden');
          successContainer.classList.remove('hidden');
        }
        else {
          successMessage.textContent = `You are now registered!`;
          imageRegistration.classList.remove('fade-in');
          imageRegistration.classList.add('hidden');
          cameraOptionContainer.classList.add('hidden');
          successContainer.classList.remove('hidden');
        }
      }
      else {
        successMessage.textContent = `You are now registered!`;
        imageRegistration.classList.remove('fade-in');
        imageRegistration.classList.add('hidden');
        successContainer.classList.remove('hidden');
      }
    })
    .catch(error => {
      console.error('Error uploading image:', error);
    });
  });

  // Cancel photo
  cancelbutton.addEventListener('click', function() {
    imageRegistration.classList.remove('hidden');
    imageRegistration.classList.add('fade-in');
    cameraOptionContainer.classList.remove('camera-show');
    video.pause();
    video.srcObject.getTracks()[0].stop();
    cameraContainer.style.display = 'none';
    console.log('Video stream stopped');
  });

  // Instantiate Dropzone
  Dropzone.options.myDropzone = {
    url: "/register/upload-card",
    paramName: "image",
    acceptedFiles: "image/*",
    addRemoveLinks: true,
    dictDefaultMessage: '<i class="fa fa-upload" aria-hidden="true"></i> <br> Drag & Drop Image here <br><span class="orMsg"> or </span><br> Click to Browse',
    dictFallbackMessage: "Your browser does not support drag'n'drop file uploads.",
    dictInvalidFileType: "You can't upload files of this type.",
    dictCancelUpload: "Cancel upload",
    dictUploadCanceled: "Upload canceled.",
    dictRemoveFile: "Remove file",
    dictMaxFilesExceeded: "You can only upload a maximum of {{maxFiles}} file.",
    maxFiles: 1,
    autoProcessQueue: false, // Prevent automatic uploading of the image
    init: function() {
      var confirmBtn = document.getElementById("confirmBtn");
      var dz = this;
      var cameraOptionDiv = document.getElementById("camera-option");
      var orMessage = document.getElementById("or");

      // Display thumbnail of the selected image
      this.on("thumbnail", function(file, dataUrl) {
        confirmBtn.disabled = false;
        cameraOptionDiv.classList.add("hidden");
        orMessage.classList.add("hidden");
        if (!errorMessageDiv.classList.contains('hidden')) {
          errorMessageDiv.classList.add('hidden');
        }
        var previewElement = file.previewElement;
        previewElement.classList.remove("dz-file-preview");
        var previewImage = previewElement.querySelector("[data-dz-thumbnail]");
        previewImage.src = dataUrl;
      });

      // Handle upload errors
      this.on("error", function(file, response) {
        errorMessageDiv.classList.remove('hidden');
        this.removeFile(file);
      });

      // Handle confirm button click
      confirmBtn.addEventListener("click", function() {
        // Process the queue of files
        dz.processQueue();

        // Handle the success event when the queue has been processed
        dz.on("success", function(file, response) {
          if (response.message.includes('election')) {
            const electionDescription = response.message.replace('Voter registered successfully for election ', '').trim();
            const electionOpenTime = response.OpenTime;
            const electionId = response.Id;
            if (electionDescription && electionOpenTime) {
              const openTime = new Date(electionOpenTime);
              const now = new Date();
              if (now >= openTime) {
                const voteButton = document.createElement('button');
                voteButton.setAttribute('class', 'primaryBtnInverted');
                voteButton.setAttribute('onclick', `location.href='/vote/${electionId}'`);
                voteButton.textContent = 'VOTE NOW';
                successMessageTimer.appendChild(voteButton);
              }
              else {
                var timeRemaining = Math.max(0, openTime.getTime() - now.getTime());

                var timer = setInterval(() => {
                  var days = Math.floor(timeRemaining / (1000 * 60 * 60 * 24));
                  var hours = Math.floor((timeRemaining % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                  var minutes = Math.floor((timeRemaining % (1000 * 60 * 60)) / (1000 * 60));
                  var seconds = Math.floor((timeRemaining % (1000 * 60)) / 1000);
                  var timerText = `Voting begins in ${days}d ${hours}h ${minutes}m ${seconds}s`;
                  successMessageTimer.textContent = timerText;
                  timeRemaining -= 1000;
                  if (timeRemaining < 0) {
                    clearInterval(timer);
                  }
                }, 1000);
              }

              successMessage.innerHTML = `You are now registered for: <strong>${electionDescription}</strong>`;
              imageRegistration.classList.remove('fade-in');
              imageRegistration.classList.add('hidden');
              cameraOptionContainer.classList.add('hidden');
              successContainer.classList.remove('hidden');
            }
            else {
              successMessage.textContent = `You are now registered!`;
              imageRegistration.classList.remove('fade-in');
              imageRegistration.classList.add('hidden');
              cameraOptionContainer.classList.add('hidden');
              successContainer.classList.remove('hidden');
            }
          }
          else {
            successMessage.textContent = `You are now registered!`;
            imageRegistration.classList.remove('fade-in');
            imageRegistration.classList.add('hidden');
            successContainer.classList.remove('hidden');
          }
        });

        // Disable the button after sending the image
        confirmBtn.disabled = true;
      });

      // Handle file removal
      this.on("removedfile", function(file) {
        if (dz.files.length === 0) {
          confirmBtn.disabled = true;
          cameraOptionDiv.classList.remove("hidden");
          orMessage.classList.remove("hidden");
        }
      });

      // Handle upload errors
      this.on("error", function(file, response) {
          errorMessageDiv.classList.remove('hidden');
          this.removeFile(file);
      });
    }
  };

  if (window.matchMedia("(max-width: 769px)").matches) {
  Dropzone.options.myDropzone.dictDefaultMessage = '<i class="fa fa-upload" aria-hidden="true"></i> <br> Tap to Browse Images';
}
</script>

        <img class="logoBubble" src="assets/Logo-Bubble.png" alt="SETUSU Logo">
    </body>

    <footer>
      <div class="row">
          <div class="col-md-6 col-sm-12">
          <h4 class="footer-h4">Follow us on</h4>
          <div class="social-icons">
              <div>
              <h5>Waterford Campus</h5>
              <div class="wd-links">
                  <a href="https://www.instagram.com/setusu.wd/" target="_blank"><i class="fab fa-instagram fa-3x" style="color:white; margin-right: 1vw;"></i></a>
                  <a href="https://twitter.com/setusu_wd/" target="_blank"><i class="fab fa-twitter fa-3x" style="color:white; margin-right: 1vw;"></i></a>
                  <a href="https://www.facebook.com/setusu.wd/" target="_blank"><i class="fab fa-facebook fa-3x" style="color:white; margin-right: 1vw;"></i></a>
              </div>
              </div>
              <div>
              <h5>Carlow Campus</h5>
              <div class="cw-links">
                  <a href="https://www.instagram.com/setusu.cw/" target="_blank"><i class="fab fa-instagram fa-3x" style="color:white; margin-right: 1vw;"></i></a>
                  <a href="https://twitter.com/setusu_cw/" target="_blank"><i class="fab fa-twitter fa-3x" style="color:white; margin-right: 1vw;"></i></a>
                  <a href="https://www.facebook.com/setusu.cw/" target="_blank"><i class="fab fa-facebook fa-3x" style="color:white; margin-right: 1vw;"></i></a>
              </div>
              </div>
          </div>
          </div>
          <div class="col-md-6 col-sm-12" id="copyright">
          <h4>&copy; 2023 SETUSU. All rights reserved.</h4>
          <p>Designed by Rebecca Troy (20088744)</p>
          </div>
      </div>
  </footer>
</html>