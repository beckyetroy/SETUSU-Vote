<!doctype html>
<html lang="en">
    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <!-- Fonts -->
        <link href='https://fonts.googleapis.com/css?family=Inter' rel='stylesheet'>
        <link href='https://fonts.googleapis.com/css?family=Roboto Condensed' rel='stylesheet'>
        <link href="https://fonts.cdnfonts.com/css/aileron" rel="stylesheet">

        <!-- CSS-->
        <link rel="stylesheet" href="/css/style.css">
        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.1/css/all.css" integrity="sha384-vp86vTRFVJgpjF9jiIGPEEqYqlDwgyBgEF109VFjmqGmIY/Y4HV4d3Gp2irVfcrp" crossorigin="anonymous">

        <!-- Bootstrap CSS -->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

        <!-- JQuery -->
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
        <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js" integrity="sha384-Dziy8F2VlJQLMShA6FHWNul/veM9bCkRUaLqr199K94ntO5QUrLJBEbYegdSkkqX" crossorigin="anonymous"></script>

        <!-- Bootstrap JavaScript -->
        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

        <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
        <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

        <!-- Dropzone -->
        <script src="https://unpkg.com/dropzone@5/dist/min/dropzone.min.js"></script>
        <link rel="stylesheet" href="https://unpkg.com/dropzone@5/dist/min/dropzone.min.css" type="text/css" />

        <title><%= title %></title>
    </head>
    <body>
        <nav class="navbar navbar-expand-lg d-flex justify-content-between">
            <h1 id="admin-dashboard-title"><%= title %></h1>
            <div class="navbar-nav ms-auto">
                <div class="nav-item">
                    <a class="nav-link" href="/">Back to Home Page</a>
                </div>
            </div>
        </nav>
        <div class="container-basic-registration">
            <form action="/register" method="POST" class="register">
                <h3 class="formTitle">Register to Vote</h3>
                <%= message %>
                <%
                if(data.length > 0)
                {
                    %>
                    <select name="election" id="electionSelect">
                        <option value="" disabled selected>Select an option</option>
                        <%
                        electionData = data.filter((v, i, a) => a.findIndex(t => (t.Id === v.Id)) === i);
                        electionData.forEach(function(election){
                            if (election.Id) {
                        %>
                            <option value="<%= election.Id %>"> <%= election.Description %> </option>
                        <%
                        } 
                            else {}
                        });
                        %>
                    </select>

                    <label>Student Number : </label>
                    <input type="text" placeholder="Enter Student Number" name="studentno" required>
                    <label>First Name(s) : </label>
                    <input type="text" placeholder="Enter First Name(s)" name="fname" required>
                    <label>Last Name : </label>
                    <input type="text" placeholder="Enter Last Name" name="lname" required>
                    <label>Student Email : </label>
                    <input type="text" placeholder="Enter Email" name="email" required>
                    <br>
                    <button type="submit" value="register" class="primaryBtn" id="next-button">NEXT</button>
                    <%
                }
                else
                {
                    %>
                    No Elections to Register for at this time.
                <%
                }
                %>
            </form>
        </div>

        <div class="container-image-registration">
          <div class="image-upload">
            <div id="my-dropzone" class="dropzone"></div>
            <button id="confirmBtn" disabled>Confirm</button>
          </div>

          <div class="camera">
            <div id="camera-container" style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; background-color: rgba(0, 0, 0, 0.5); display: none;">
              <video id="video" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);" autoplay></video>
              <button id="startbutton" style="position: absolute; bottom: 10%; left: 50%; transform: translateX(-50%);">Take photo</button>
              <button id="cancelbutton" style="position: absolute; bottom: 5%; left: 50%; transform: translateX(-50%);">Cancel</button>
            </div>
              
            <button id="open-camera-btn">Open camera</button>

            <div id="confirm-dialog" class="hidden">
              <img id="photo-preview" src="" alt="Taken photo">
              <button id="retake">Retake</button>
              <button id="confirm">Confirm</button>
            </div>
          </div>

          <div id="errorMessageDiv" class="hidden">
            This image is not valid. Please try again.
          </div>
      </div>

<script>
  const nextButton = document.getElementById('next-button');
  const basicRegistration = document.querySelector('.container-basic-registration');
  const imageRegistration = document.querySelector('.container-image-registration');
  const basicForm = document.querySelector('.register');

  basicForm.addEventListener('submit', function(event) {
    event.preventDefault();
  });

  nextButton.addEventListener('click', () => {
    fetch('/register', {
      method: 'POST',
      body: new FormData(basicForm)
    })
    .then(response => response.json())
    .then(data => {
      if (data.message === 'Basic form saved') {
        basicRegistration.classList.add('slide-out');
        setTimeout(() => {
          basicRegistration.remove();
          imageRegistration.classList.add('fade-in');
        }, 1000);
      }
    })
    .catch(error => {
      console.error(error);
    });
  });

  const openCameraBtn = document.getElementById('open-camera-btn');
  const cameraContainer = document.getElementById('camera-container');
  const video = document.getElementById('video');
  const startbutton = document.getElementById('startbutton');
  const cancelbutton = document.getElementById('cancelbutton');
  const confirmDialog = document.getElementById('confirm-dialog');
  const errorMessageDiv = document.getElementById('errorMessageDiv');
  const photoPreview = document.getElementById('photo-preview');
  const canvas = document.createElement('canvas');
  let stream = null;
  let data = null;

  confirmDialog.classList.add('hidden');
  errorMessageDiv.classList.add('hidden');

  openCameraBtn.addEventListener('click', function() {
    // Show camera container
    cameraContainer.style.display = 'block';
    errorMessageDiv.classList.add('hidden');

    // Get user media
    if (navigator.mediaDevices.getUserMedia) {
      navigator.mediaDevices.getUserMedia({ video: true })
        .then(function(mediaStream) {
            stream = mediaStream;
            video.srcObject = mediaStream;
            video.play();
        })
        .catch(function(err) {
          console.log("An error occurred: " + err);
        });
    }
  });

  // Take photo
  startbutton.addEventListener('click', function() {
    canvas.width = video.videoWidth;
    canvas.height = video.videoHeight;
    canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);
    data = canvas.toDataURL('image/png');
    video.pause();
    stream.getTracks()[0].stop();

    photoPreview.src = data;
    confirmDialog.classList.remove('hidden');
    cameraContainer.style.display = 'none';
  });

  const retakeButton = document.getElementById('retake');
  const confirmButton = document.getElementById('confirm');

  retakeButton.addEventListener('click', function () {
    confirmDialog.classList.add('hidden');
    // Show camera container
    cameraContainer.style.display = 'block';

    // Get user media
    if (navigator.mediaDevices.getUserMedia) {
      navigator.mediaDevices.getUserMedia({ video: true })
        .then(function(mediaStream) {
            stream = mediaStream;
            video.srcObject = mediaStream;
            video.play();
        })
        .catch(function(err) {
          console.log("An error occurred: " + err);
        });
    }
    photoPreview.src = '';
  });

  confirmButton.addEventListener('click', function () {
    // convert data to Blob object
    const byteString = atob(data.split(',')[1]);
    const ab = new ArrayBuffer(byteString.length);
    const ia = new Uint8Array(ab);
    for (let i = 0; i < byteString.length; i++) {
      ia[i] = byteString.charCodeAt(i);
    }
    const blob = new Blob([ab], { type: 'image/png' });

    // create FormData object and append file
    const formData = new FormData();
    formData.append('image', blob, 'image.png');

    fetch('/register/upload-card', {
      method: 'POST',
      body: formData
    })
    .then(response => response.json())
    .then(data => {
      if (data.message === 'Voter registered successfully') {
        window.location.href = '/';
      } else {
        cameraContainer.style.display = 'none';
        confirmDialog.classList.add('hidden');
        errorMessageDiv.classList.remove('hidden');
      }
    })
    .catch(error => {
      console.error('Error uploading image:', error);
    });
  });

  // Cancel photo
  cancelbutton.addEventListener('click', function() {
    video.pause();
    video.srcObject.getTracks()[0].stop();
    cameraContainer.style.display = 'none';
    console.log('Video stream stopped');
  });

  // Instantiate Dropzone
  Dropzone.options.myDropzone = {
    url: "/register/upload-card",
    paramName: "image",
    acceptedFiles: "image/*",
    addRemoveLinks: true,
    dictDefaultMessage: "Drop files here or click to upload",
    dictFallbackMessage: "Your browser does not support drag'n'drop file uploads.",
    dictInvalidFileType: "You can't upload files of this type.",
    dictCancelUpload: "Cancel upload",
    dictUploadCanceled: "Upload canceled.",
    dictRemoveFile: "Remove file",
    dictMaxFilesExceeded: "You can only upload a maximum of {{maxFiles}} file.",
    maxFiles: 1,
    autoProcessQueue: false, // Prevent automatic uploading of the image
    init: function() {
      var confirmBtn = document.getElementById("confirmBtn");
      var dz = this;

      // Display thumbnail of the selected image
      this.on("thumbnail", function(file, dataUrl) {
        confirmBtn.disabled = false;
        var previewElement = file.previewElement;
        previewElement.classList.remove("dz-file-preview");
        var previewImage = previewElement.querySelector("[data-dz-thumbnail]");
        previewImage.src = dataUrl;
      });

      // Handle upload errors
      this.on("error", function(file, response) {
        errorMessageDiv.classList.remove('hidden');
        this.removeFile(file);
      });

      // Handle confirm button click
      confirmBtn.addEventListener("click", function() {
        // Process the queue of files
        dz.processQueue();

        // Handle the success event when the queue has been processed
        dz.on("success", function(file, response) {
            if (response.message === 'Voter registered successfully') {
                window.location.href = '/';
            }
        });

        // Disable the button after sending the image
        confirmBtn.disabled = true;
      });


      // Handle upload errors
      this.on("error", function(file, response) {
          errorMessageDiv.classList.remove('hidden');
          this.removeFile(file);
      });
    }
  };
</script>

        <img class="logoBubble" src="assets/Logo.png" alt="SETUSU Logo">
    </body>
</html>